%	Auto/cross correlation function between Gstim and Gother

clear all
close all
fclose('all');

strEnv = {'stim100' 'addstdp' 'mltstdp' 'stim050' 'stim060' 'stim070' 'stim080' 'stim090'};
strData =  {'50[Hz]' '100[Hz]' '200[Hz]' '0.3[-]' '0.5[-]' '0.7[-]'};
strTest =  {'1,000[msec]' '2,000[msec]' '4,000[msec]'...
			'1,000[msec]' '2,000[msec]' '4,000[msec]'...
			'wo_learning' 'wo_input mod' ' wo_learning_&_input_mod'};
strCmp = {'02' '04' '06' '08' '10' '12' '14' '16' '18' '20'};
strTrl = {'01' '02' '03' '04' '05' '06' '07' '08' '09' '10'};

NUM_EXC = 400;

pltEnv  = 1;
pltData = [3 6];
pltTest = [1:9];
pltCmp  = 5:5;
pltTrl  = 1:1;

tbin = 0; % [ms]: default=25ms corresponds 40Hz(Gamma range)
tdur = 0;
tstart = 0;
tend = tstart+tdur;
idGstim = 1:100;
idGother = 101:200;

dirPrnt = sprintf('../DataBase');
dirPrntSeq = sprintf('..');

for i = pltEnv
	dirEnv = sprintf('%s/%s',dirPrnt,strEnv{i});
	dirEnvSeq = sprintf('%s/mod-code-longstim02-%s',dirPrntSeq,strEnv{i});

	for j = pltData
		dirData = sprintf('%s/data%d',dirEnv,j);
		dirDataSeq = sprintf('%s/data%d',dirEnvSeq,j);

		for k = pltTest
			dirTest = sprintf('%s/test0%d',dirData,k);
			dirTestSeq = sprintf('%s/data-test0%d',dirDataSeq,k);
			load_path = sprintf('%s/espk',dirTestSeq);
			espk0 = load(load_path);


			switch k
			case {1,4,7}
				nVisstim = 99;
				tinterval = 1000;
			case {2,5}
				nVisstim = 49;
				tinterval = 2000;
			case {3,6}
				nVisstim = 24;
				tinterval = 4000;
			otherwise
				nVisstim = 99;
				tinterval = 1000;
			end


			tbin = .5; % [ms]: default=25ms corresponds 40Hz(Gamma range)
			tdur = 500;
			idxGstim = find(0<=espk0(:,2)&espk0(:,2)<=99);
			idxGother = find(100<=espk0(:,2)&espk0(:,2)<=399);
			dataGstim = espk0(idxGstim,1);
			dataGother = espk0(idxGother,1);

			% X-correlation between Gstim & Gother activity when given vis.stim.
			binarization = 0;
			for l = 1:nVisstim
				tstart = tinterval * l;
				tend = tstart + tdur;
				ts = tstart:tbin:tend;
				ActGstim(l,:) = histc(dataGstim,ts);
				ActGother(l,:) = histc(dataGother,ts);
				if binarization
					ActGstim(l,find(ActGstim(l,:))) = 1;
					ActGother(l,find(ActGother(l,:))) = 1;
				end
				ACGstim(l,:) = xcorr(ActGstim(l,:));
				ACGother(l,:) = xcorr(ActGother(l,:));
				[XC(l,:) lags] = xcorr(ActGstim(l,:),ActGother(l,:));
			end
			meanACGstim = mean(ACGstim,1);
			meanACGother = mean(ACGother,1);
			meanXC = mean(XC,1);
			stdACGstim = std(ACGstim,1);
			stdACGother = std(ACGother,1);
			stdXC = std(XC,1);
			meanACGstim = meanACGstim ./ max(meanACGstim);
			meanACGother = meanACGother ./ max(meanACGother);
			meanXC = meanXC ./ max(meanXC);
			stdACGstim = stdACGstim ./ max(stdACGstim);
			stdACGother = stdACGother ./ max(stdACGother);
			stdXC = stdXC ./ max(stdXC);

			figure
			set(gcf,'Name',sprintf('%s_%s',strData{j},strTest{k}))
			subplot(5,1,1)
			plot(lags,meanXC);hold on
			plot(lags,meanXC+stdXC,'--');hold on
			plot(lags,meanXC-stdXC,'--')
			title('XCF of Gstim vs Gother')
			subplot(5,1,2)
			plot(lags,meanACGother);hold on
			plot(lags,meanACGother+stdACGother,'--');hold on
			plot(lags,meanACGother-stdACGother,'--')
			title('ACF of Gother')
			subplot(5,1,3)
			plot(lags,meanACGstim);hold on
			plot(lags,meanACGstim+stdACGstim,'--');hold on
			plot(lags,meanACGstim-stdACGstim,'--')
			title('ACF of Gstim')
			subplot(5,1,4)
			bar(ts,ActGother(17,:),'histc')
			title('Action sequence of Gother')
			subplot(5,1,5)
			bar(ts,ActGstim(17,:),'histc')
			title('Action sequence of Gstim')

			fprintf('For loop have finished until test0%d\n',k);
		end %for k : data-test

		fprintf('For loop have finished until data%d\n',j);
	end %for j : data

	fprintf('For loop have finished until simu env%d\n',i);
end	%for i : simulation environment

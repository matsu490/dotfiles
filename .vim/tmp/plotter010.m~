%	Chunked synapse distribution

clear all
close all
fclose('all');

strEnv  =  {'stim100' 'addstdp' 'mltstdp' 'stim050' 'stim060' 'stim070' 'stim080' 'stim090'};
strData =  {'50[Hz]' '100[Hz]' '200[Hz]' '0.3[-]' '0.5[-]' '0.7[-]'};
strTest =  {'1,000[msec]' '2,000[msec]' '4,000[msec]'...
			'1,000[msec]' '2,000[msec]' '4,000[msec]'...
			'wo learning' 'wo input mod' ' wo learning & input mod'};
strCmp  =  {'02' '04' '06' '08' '10' '12' '14' '16' '18' '20'};
strTrl  =  {'01' '02' '03' '04' '05' '06' '07' '08' '09' '10'};
strClr  =  {'r' 'g' 'b' 'r' 'g' 'b'};

pltEnv  = 1:1;	%Simulation environment
pltData = 6:6;	%Data number
pltTest = [2:2];  %Data-test number
pltCmp  = 5:5;  %Sequence compression ratio
pltTrl  = 1:10; %After learning trial number

syna_mean_tmp = zeros(length(pltData),length(pltTest),4);

dirPrnt = sprintf('./DataBase');
dirPrntSeq = sprintf('.');

for i = pltEnv
	dirEnv = sprintf('%s/%s',dirPrnt,strEnv{i});
	dirEnvSeq = sprintf('%s/mod-code-longstim02-%s',dirPrntSeq,strEnv{i});

	for j = pltData
		dirData = sprintf('%s/data%d',dirEnv,j);
		dirDataSeq = sprintf('%s/data%d',dirEnvSeq,j);

		figure

		for k = pltTest
			dirTest = sprintf('%s/test0%d',dirData,k);
			dirTestSeq = sprintf('%s/data-test0%d',dirDataSeq,k);
			load_path = sprintf('%s/synapse.mat',dirTest);
			load(load_path)

			if k<=3 pltTmp=k;else pltTmp=k-3;end
			subplot(2,3,pltTmp)
			semilogx(syna_dist_chunked{2}(2,:),syna_dist_chunked{2}(1,:));hold on
			semilogx(syna_dist_chunked{3}(2,:),syna_dist_chunked{3}(1,:));hold on
			semilogx(syna_dist_chunked{1}(2,:),syna_dist_chunked{1}(1,:)+syna_dist_chunked{4}(1,:),'k')
			ylim([0 2000])
			title([strData{j} '-' strTest{k}])

			fprintf('For loop have finished until test0%d\n',k);
		end %for k : data-test

		fprintf('For loop have finished until data%d\n',j);
	end %for j : data

	fprintf('For loop have finished until simu env%d\n',i);
end	%for i : simulation environment

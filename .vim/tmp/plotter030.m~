% Compare with feature value of RSS between trials

clear all
close all
fclose('all');

% *********************************
% *** Parameters for simulation ***
% *********************************
strEnv = {'stim100' 'addstdp' 'mltstdp' 'stim050' 'stim060' 'stim070' 'stim080' 'stim090'};
strData =  {'50[Hz]' '100[Hz]' '200[Hz]' '0.3[-]' '0.5[-]' '0.7[-]'};
strTest =  {'1,000[msec](same)' '2,000[msec](same)' '4,000[msec](same)'...
			'1,000[msec](diff)' '2,000[msec](diff)' '4,000[msec](diff)'...
			'wo-learning' 'wo-input mod' ' wo-learning & input mod'};
strCmp = {'02' '04' '06' '08' '10' '12' '14' '16' '18' '20'};
strTrl = {'01' '02' '03' '04' '05' '06' '07' '08' '09' '10'};

pltEnv  = 1;	%Simulation environment
pltData = [3];	%Data number
pltTest = 1:1;  %Data-test number
pltCmp  = 5:5;  %Sequence compression ratio
pltTrl  = 1:10; %After learning trial number

STIM_TIME = 500;
ID_G1 = 1:100;
ID_G2 = 101:200;
ID_OTHER = 201:400;
NUM_EXC = 400;

data_dir = '/Users/matsu/Research/LogSTDP';
working_dir = '/Users/matsu/Documents/MATLAB/LogSTDP';
% ********************
% *** Main routine ***
% ********************
for i = pltEnv
	for j = pltData
		for k = pltTest
			% Load synapse data
			load_path = sprintf('%s/DataBase/%s/Data%d/Test0%d/synapse.mat',working_dir,strEnv{i},j,k);
			load(load_path);
			for l = pltCmp
				clear ps
				for m = pltTrl
					% Load seqdata
					load_dir = sprintf('%s/mod-code-longstim02-%s/data%d/data-test0%d',data_dir,strEnv{i},j,k);
					espk = load(sprintf('%s/espk.%s',load_dir,strTrl{m}));
					seqdata = load(sprintf('%s/sequences%s-c%s',load_dir,strTrl{m},strCmp{l}));
					seqdata_cell = load(sprintf('%s/sequences%s-c%s.appear.cell',load_dir,strTrl{m},strCmp{l}));
					seqdata_syna = load(sprintf('%s/sequences%s-c%s.appear.syna',load_dir,strTrl{m},strCmp{l}));
					seqdata_length = load(sprintf('%s/sequences%s-c%s.length',load_dir,strTrl{m},strCmp{l}));

					tmpi = find(500<=espk(:,1)&espk(:,1)<=1500);
					espk_isi = diff(espk(tmpi,1));
					espk_spikingNeuron = hist(espk(tmpi,2)+1,1:NUM_EXC);

					pseu_mat(:,:,m) = reshape(seqdata_syna(:,3),NUM_EXC,NUM_EXC);
					ps(:,m) = reshape(pseu_mat(:,:,m),1,[]);
					isi = diff(seqdata(:,1));
					isi(find(seqdata(1:end-1,3)==-1)) = [];
					rss = size(seqdata_length,1);

					row = 3;
					clm = 4;
					figure
					set(gcf,'Name',sprintf('%s-%s-%s-CompRatio=%s-Trial=%s',strEnv{i},strData{j},strTest{k},strCmp{l},strTrl{m}))
					subplot(row,clm,1)
					plot(espk_spikingNeuron,'o-')
					title('Spiking neuron ID')
					ylabel('espk')
					subplot(row,clm,2)
					hist(espk(tmpi,1),50)
					title({sprintf('%s-%s-%s-CompRatio=%s-Trial=%s',strEnv{i},strData{j},strTest{k},strCmp{l},strTrl{m}) 'Spike timing'})
					subplot(row,clm,3)
					hist(espk_isi,50)
					%xlim([0 500])
					title('ISI of espk')
					subplot(row,clm,4) % Synaptic weight
					imagesc(syna_mat,[0 0.7*max(syna_mat(:))])
					colormap(gray)
					title('Synaptic weight')

					subplot(row,clm,5) % Used neuron ID
					plot(seqdata_cell(:,2),'o-')
					title('Neuron ID used in RSS')
					ylabel('RSS')
					subplot(row,clm,6) % Spike timing
					hist(seqdata(:,1),50)
					title('Spike timing in RSS')
					subplot(row,clm,7) % ISI
					hist(isi,50)
					title(sprintf('ISI #RSS=%d',rss))
					subplot(row,clm,8) % Used synapse
					imagesc(pseu_mat(:,:,m))
					title('Pseudo synaptic weight')
					subplot(row,clm,9) % Combo
					hist(seqdata_length(:,2),3:max(seqdata_length(:,2)))
					title('Combo')
					subplot(row,clm,10) % Duration
					hist(seqdata_length(:,1),50)
					title('Duration of RSS')

					fprintf('For loop have finished until trial %d\n',m);
				end %for m : trial
				ps(:,end+1) = reshape(syna_mat,1,[]);
				figure
				subplot(1,1,1)
				imagesc(corrcoef(ps))
				caxis([-1 1])
				title('CC between pseu-mat')

				fprintf('For loop have finished until cmp=%d\n',l);
			end %for l : comprassion ratio
			fprintf('For loop have finished until test0%d\n',k);
		end %for k : data-test
		fprintf('For loop have finished until data%d\n',j);
	end %for j : data
	fprintf('For loop have finished until simu env%d\n',i);
end	%for i : simulation environment

% CC between SA & EA

clear all
close all
fclose('all');

% *********************************
% *** Parameters for simulation ***
% *********************************
strEnv = {'stim100' 'addstdp' 'mltstdp' 'stim050' 'stim060' 'stim070' 'stim080' 'stim090'};
strData =  {'50[Hz]' '100[Hz]' '200[Hz]' '0.3[-]' '0.5[-]' '0.7[-]'};
strTest =  {'1,000[msec](same)' '2,000[msec](same)' '4,000[msec](same)'...
			'1,000[msec](diff)' '2,000[msec](diff)' '4,000[msec](diff)'...
			'wo-learning' 'wo-input mod' ' wo-learning & input mod'};
strCmp = {'02' '04' '06' '08' '10' '12' '14' '16' '18' '20'};
strTrl = {'01' '02' '03' '04' '05' '06' '07' '08' '09' '10'};

pltEnv  = 1;	%Simulation environment
pltData = [1:6];	%Data number
pltTest = 1:1;  %Data-test number
pltCmp  = 5:5;  %Sequence compression ratio
pltTrl  = 1:10; %After learning trial number

STIM_TIME = 500;
ID_G1 = 1:100;
ID_G2 = 101:200;
ID_OTHER = 201:400;
NUM_EXC = 400;

tbin = 25; % [ms]: default=25ms corresponds 40Hz(Gamma range)

data_dir = '/Users/matsu/Research/logSTDP';
% ********************
% *** Main routine ***
% ********************
for i = pltEnv
	for j = pltData
		for k = pltTest
			load_path = sprintf('%s/mod-code-longstim02-%s/data%d/data-test0%d/espk',data_dir,strEnv{i},j,k);
			espk0 = load(load_path);
			for l = pltCmp
				for m = pltTrl
					load_path = sprintf('%s/mod-code-longstim02-%s/data%d/data-test0%d/espk.%s',data_dir,strEnv{i},j,k,strTrl{m});
					espk = load(load_path);
					load_path = sprintf('%s/mod-code-longstim02-%s/data%d/data-test0%d/sequences%s-c%s.length',data_dir,strEnv{i},j,k,strTrl{m},strCmp{l});
					seqdata_length = load(load_path);

					switch k
					case {1 4 7 8 9}
						trange1 = [500 1500];
					case {2 5}
						trange1 = [1500 2500];
					case {3 6}
						trange1 = [3500 4500];
					end
					trange2 = [500 1500];
					ts1 = trange1(1):tbin:trange1(2);
					ts2 = trange2(1):tbin:trange2(2);
					ns1 = zeros(NUM_EXC,length(ts1)-1);
					ns2 = zeros(NUM_EXC,length(ts2)-1);
					for n=1:NUM_EXC
						neuron = n - 1;
						tmpi1 = find(espk0(:,2)==neuron);
						tmpi2 = find(espk(:,2)==neuron);
						tmpdata1 = espk0(tmpi1,1);
						tmpdata2 = espk(tmpi2,1);
						clear tmpns bin
						[tmpns1,bin1] = histc(tmpdata1,ts1);
						[tmpns2,bin2] = histc(tmpdata2,ts2);
						ns1(n,:) = tmpns1(1:end-1)';
						ns2(n,:) = tmpns2(1:end-1)';
					end
					sa1 = reshape(ns1(:,1:((size(ts1,2)-1)/2)),1,[]);
					sa2 = reshape(ns2(:,1:((size(ts2,2)-1)/2)),1,[]);
					ea1 = reshape(ns1(:,(((size(ts1,2)-1)/2)+1):(size(ts1,2)-1)),1,[]);
					ea2 = reshape(ns2(:,(((size(ts2,2)-1)/2)+1):(size(ts2,2)-1)),1,[]);
					cc1 = corrcoef(sa1,ea1);
					cc2 = corrcoef(sa2,ea2);
					setCC1(1,m) = cc1(1,2);
					setCC2(1,m) = cc2(1,2);
					setRSS(1,m) = size(seqdata_length,1);

					fprintf('For loop have finished until trial %d\n',m);
				end %for m : trial
				figure
				plotyy(1:size(setCC2,2),setCC2,1:size(setRSS,2),setRSS);hold on
				legend('Corr.coef.','#RSS')
				title1 = sprintf('%s %s %s CompRatio=%s',strEnv{i},strData{j},strTest{k},strCmp{l});
				ccc = corrcoef(setCC2,setRSS);
				title2 = sprintf('CC (Corr.coef. vs #RSS) = %d',ccc(1,2));
				title({title1,title2})
				figure
				plot(setCC1,'o-r');hold on
				plot(setCC2,'o-b');hold on
				legend('Initial','Final')
				title('Similarity with CC of Initial vs Final')

				fprintf('For loop have finished until cmp=%d\n',l);
			end %for l : comprassion ratio
			fprintf('For loop have finished until test0%d\n',k);
		end %for k : data-test
		fprintf('For loop have finished until data%d\n',j);
	end %for j : data
	fprintf('For loop have finished until simu env%d\n',i);
end	%for i : simulation environment
